//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class QTC_AssetManagerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(QTC.AssetManager), typeof(SingleTon<QTC.AssetManager>));
		L.RegFunction("Init", Init);
		L.RegFunction("UnloadAllUnusedAssetBundle", UnloadAllUnusedAssetBundle);
		L.RegFunction("GetLoadedAssetBundlesInfo", GetLoadedAssetBundlesInfo);
		L.RegFunction("LoadAssetAsync", LoadAssetAsync);
		L.RegFunction("New", _CreateQTC_AssetManager);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("assetDirs", get_assetDirs, set_assetDirs);
		L.RegVar("singleAssetDirs", get_singleAssetDirs, set_singleAssetDirs);
		L.RegVar("residentAssetDirs", get_residentAssetDirs, set_residentAssetDirs);
		L.RegVar("assetName_assetFullName", get_assetName_assetFullName, set_assetName_assetFullName);
		L.RegVar("assetName_assetBundleName", get_assetName_assetBundleName, set_assetName_assetBundleName);
		L.RegVar("assetBundleName_assetBundleFullName", get_assetBundleName_assetBundleFullName, set_assetBundleName_assetBundleFullName);
		L.RegVar("assetBundleName_resident", get_assetBundleName_resident, set_assetBundleName_resident);
		L.RegVar("MAX_ASSETBUNDLE_LOAD_PER_FRAME", get_MAX_ASSETBUNDLE_LOAD_PER_FRAME, set_MAX_ASSETBUNDLE_LOAD_PER_FRAME);
		L.RegVar("isInited", get_isInited, set_isInited);
		L.RegVar("onInit", get_onInit, set_onInit);
		L.RegVar("ASSETBUNDLE_DIR", get_ASSETBUNDLE_DIR, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateQTC_AssetManager(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				QTC.AssetManager obj = new QTC.AssetManager();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: QTC.AssetManager.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Init(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			QTC.AssetManager obj = (QTC.AssetManager)ToLua.CheckObject<QTC.AssetManager>(L, 1);
			System.Collections.IEnumerator o = obj.Init();
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnloadAllUnusedAssetBundle(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			QTC.AssetManager obj = (QTC.AssetManager)ToLua.CheckObject<QTC.AssetManager>(L, 1);
			obj.UnloadAllUnusedAssetBundle();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetLoadedAssetBundlesInfo(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			QTC.AssetManager obj = (QTC.AssetManager)ToLua.CheckObject<QTC.AssetManager>(L, 1);
			string o = obj.GetLoadedAssetBundlesInfo();
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadAssetAsync(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			QTC.AssetManager obj = (QTC.AssetManager)ToLua.CheckObject<QTC.AssetManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			QTC.AssetManager.AssetType arg1 = (QTC.AssetManager.AssetType)ToLua.CheckObject(L, 3, typeof(QTC.AssetManager.AssetType));
			UnityEngine.Object arg2 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 4);
			System.Action<UnityEngine.Object> arg3 = (System.Action<UnityEngine.Object>)ToLua.CheckDelegate<System.Action<UnityEngine.Object>>(L, 5);
			obj.LoadAssetAsync(arg0, arg1, arg2, arg3);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_assetDirs(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			QTC.AssetManager obj = (QTC.AssetManager)o;
			System.Collections.Generic.List<string> ret = obj.assetDirs;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index assetDirs on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_singleAssetDirs(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			QTC.AssetManager obj = (QTC.AssetManager)o;
			System.Collections.Generic.List<string> ret = obj.singleAssetDirs;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index singleAssetDirs on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_residentAssetDirs(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			QTC.AssetManager obj = (QTC.AssetManager)o;
			System.Collections.Generic.List<string> ret = obj.residentAssetDirs;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index residentAssetDirs on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_assetName_assetFullName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			QTC.AssetManager obj = (QTC.AssetManager)o;
			System.Collections.Generic.Dictionary<string,string> ret = obj.assetName_assetFullName;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index assetName_assetFullName on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_assetName_assetBundleName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			QTC.AssetManager obj = (QTC.AssetManager)o;
			System.Collections.Generic.Dictionary<string,string> ret = obj.assetName_assetBundleName;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index assetName_assetBundleName on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_assetBundleName_assetBundleFullName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			QTC.AssetManager obj = (QTC.AssetManager)o;
			System.Collections.Generic.Dictionary<string,string> ret = obj.assetBundleName_assetBundleFullName;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index assetBundleName_assetBundleFullName on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_assetBundleName_resident(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			QTC.AssetManager obj = (QTC.AssetManager)o;
			System.Collections.Generic.Dictionary<string,bool> ret = obj.assetBundleName_resident;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index assetBundleName_resident on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_MAX_ASSETBUNDLE_LOAD_PER_FRAME(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			QTC.AssetManager obj = (QTC.AssetManager)o;
			int ret = obj.MAX_ASSETBUNDLE_LOAD_PER_FRAME;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index MAX_ASSETBUNDLE_LOAD_PER_FRAME on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_isInited(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			QTC.AssetManager obj = (QTC.AssetManager)o;
			bool ret = obj.isInited;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index isInited on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onInit(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			QTC.AssetManager obj = (QTC.AssetManager)o;
			System.Action ret = obj.onInit;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onInit on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ASSETBUNDLE_DIR(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			QTC.AssetManager obj = (QTC.AssetManager)o;
			string ret = obj.ASSETBUNDLE_DIR;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ASSETBUNDLE_DIR on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_assetDirs(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			QTC.AssetManager obj = (QTC.AssetManager)o;
			System.Collections.Generic.List<string> arg0 = (System.Collections.Generic.List<string>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<string>));
			obj.assetDirs = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index assetDirs on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_singleAssetDirs(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			QTC.AssetManager obj = (QTC.AssetManager)o;
			System.Collections.Generic.List<string> arg0 = (System.Collections.Generic.List<string>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<string>));
			obj.singleAssetDirs = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index singleAssetDirs on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_residentAssetDirs(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			QTC.AssetManager obj = (QTC.AssetManager)o;
			System.Collections.Generic.List<string> arg0 = (System.Collections.Generic.List<string>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<string>));
			obj.residentAssetDirs = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index residentAssetDirs on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_assetName_assetFullName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			QTC.AssetManager obj = (QTC.AssetManager)o;
			System.Collections.Generic.Dictionary<string,string> arg0 = (System.Collections.Generic.Dictionary<string,string>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.Dictionary<string,string>));
			obj.assetName_assetFullName = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index assetName_assetFullName on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_assetName_assetBundleName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			QTC.AssetManager obj = (QTC.AssetManager)o;
			System.Collections.Generic.Dictionary<string,string> arg0 = (System.Collections.Generic.Dictionary<string,string>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.Dictionary<string,string>));
			obj.assetName_assetBundleName = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index assetName_assetBundleName on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_assetBundleName_assetBundleFullName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			QTC.AssetManager obj = (QTC.AssetManager)o;
			System.Collections.Generic.Dictionary<string,string> arg0 = (System.Collections.Generic.Dictionary<string,string>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.Dictionary<string,string>));
			obj.assetBundleName_assetBundleFullName = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index assetBundleName_assetBundleFullName on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_assetBundleName_resident(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			QTC.AssetManager obj = (QTC.AssetManager)o;
			System.Collections.Generic.Dictionary<string,bool> arg0 = (System.Collections.Generic.Dictionary<string,bool>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.Dictionary<string,bool>));
			obj.assetBundleName_resident = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index assetBundleName_resident on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_MAX_ASSETBUNDLE_LOAD_PER_FRAME(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			QTC.AssetManager obj = (QTC.AssetManager)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.MAX_ASSETBUNDLE_LOAD_PER_FRAME = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index MAX_ASSETBUNDLE_LOAD_PER_FRAME on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_isInited(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			QTC.AssetManager obj = (QTC.AssetManager)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.isInited = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index isInited on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onInit(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			QTC.AssetManager obj = (QTC.AssetManager)o;
			System.Action arg0 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 2);
			obj.onInit = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onInit on a nil value");
		}
	}
}

