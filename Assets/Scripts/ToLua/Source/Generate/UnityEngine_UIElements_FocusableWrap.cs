//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnityEngine_UIElements_FocusableWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UnityEngine.UIElements.Focusable), typeof(UnityEngine.UIElements.CallbackEventHandler));
		L.RegFunction("Focus", Focus);
		L.RegFunction("Blur", Blur);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("focusController", get_focusController, null);
		L.RegVar("focusable", get_focusable, set_focusable);
		L.RegVar("tabIndex", get_tabIndex, set_tabIndex);
		L.RegVar("delegatesFocus", get_delegatesFocus, set_delegatesFocus);
		L.RegVar("canGrabFocus", get_canGrabFocus, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Focus(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.UIElements.Focusable obj = (UnityEngine.UIElements.Focusable)ToLua.CheckObject<UnityEngine.UIElements.Focusable>(L, 1);
			obj.Focus();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Blur(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.UIElements.Focusable obj = (UnityEngine.UIElements.Focusable)ToLua.CheckObject<UnityEngine.UIElements.Focusable>(L, 1);
			obj.Blur();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_focusController(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.UIElements.Focusable obj = (UnityEngine.UIElements.Focusable)o;
			UnityEngine.UIElements.FocusController ret = obj.focusController;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index focusController on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_focusable(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.UIElements.Focusable obj = (UnityEngine.UIElements.Focusable)o;
			bool ret = obj.focusable;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index focusable on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_tabIndex(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.UIElements.Focusable obj = (UnityEngine.UIElements.Focusable)o;
			int ret = obj.tabIndex;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index tabIndex on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_delegatesFocus(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.UIElements.Focusable obj = (UnityEngine.UIElements.Focusable)o;
			bool ret = obj.delegatesFocus;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index delegatesFocus on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_canGrabFocus(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.UIElements.Focusable obj = (UnityEngine.UIElements.Focusable)o;
			bool ret = obj.canGrabFocus;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index canGrabFocus on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_focusable(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.UIElements.Focusable obj = (UnityEngine.UIElements.Focusable)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.focusable = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index focusable on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_tabIndex(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.UIElements.Focusable obj = (UnityEngine.UIElements.Focusable)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.tabIndex = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index tabIndex on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_delegatesFocus(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.UIElements.Focusable obj = (UnityEngine.UIElements.Focusable)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.delegatesFocus = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index delegatesFocus on a nil value");
		}
	}
}

